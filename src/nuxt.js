import {
	addImports,
	addPluginTemplate,
	addTemplate,
	addVitePlugin,
	addWebpackPlugin,
	createResolver,
	defineNuxtModule,
	isNuxt2,
} from '@nuxt/kit';

import { unplugin } from './bundlers.js';
import { defaultOptions } from './_defaults.js';

export default defineNuxtModule({
	meta: {
		name: '@morev/v-bem-transformer',
		configKey: 'vBemTransformer',
		compatibility: {},
	},
	defaults: defaultOptions,
	hooks: {},
	async setup(options, nuxt) {
		const FOLDER = 'v-bem-transformer/';
		const resolver = createResolver(import.meta.url);

		addWebpackPlugin(unplugin.webpack(options), { prepend: true });
		addVitePlugin(unplugin.vite(options), { prepend: true });

		addPluginTemplate({
			src: resolver.resolve('_nuxt-plugin.js'),
			filename: `${FOLDER}/nuxt-plugin.js`,
			options: {
				options,
				isNuxt2: isNuxt2(),
			},
			write: true,
		});

		if (!isNuxt2()) {
			const filename = `${FOLDER}/use-bem.js`;

			const useBemPath = addTemplate({
				filename,
				write: true,
				options,
				getContents: (context) => [
					'// Generated by `@morev/v-bem-transformer`',
					`import { useBemFactory } from '@morev/v-bem-transformer/use-bem-factory';`,
					'',
					`export const useBem = useBemFactory(${JSON.stringify(context.options, null, 2)});`,
				].join('\n'),
			}).dst;

			addImports({ name: 'useBem', as: options.composableName, from: useBemPath });
		}
	},
});
